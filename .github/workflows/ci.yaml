# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MYSQL_DB: testdb
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DB }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306
      postgres:
        image: postgres:12-alpine
        # Provide the password for postgres
        env:
          POSTGRES_DB: simple_bank
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ^1.20
      id: go

    - name: checkout out code into the Go module directory
      uses: actions/checkout@v2

    - name: install golang migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz
        mv ./migrate /usr/local/bin
        which migrate

    - name: run migration
      run: make migrateup

    - name: Test
      run: make test
